name: Test and Build

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: testpassword
          MYSQL_DATABASE: test_default_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Wait for MySQL
      run: |
        until mysqladmin ping -h"127.0.0.1" -P"3306" -uroot -p"testpassword" --silent; do
          echo "Waiting for MySQL..."
          sleep 2
        done

    - name: Create test database tables
      run: |
        mysql -h 127.0.0.1 -P 3306 -uroot -ptestpassword test_default_db < database_schema.sql || true

    - name: Create .env file
      run: |
        cat > .env << EOF
        SQLALCHEMY_DATABASE_URL=mysql+pymysql://root:testpassword@127.0.0.1:3306/test_default_db
        SQLALCHEMY_TEST_DATABASE_URL=mysql+pymysql://root:testpassword@127.0.0.1:3306/test_default_db
        SECRET_KEY=${{ secrets.SECRET_KEY }}
        ALGORITHM=HS256
        ACCESS_TOKEN_EXPIRE_MINUTES=30
        MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
        MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
        MAIL_FROM=${{ secrets.MAIL_FROM }}
        MAIL_SERVER=smtp.outlook.com
        MAIL_PORT=587
        EOF

    - name: Run tests
      run: |
        pytest tests/ -v --tb=short

    - name: Run tests with coverage
      run: |
        pytest tests/ --cov=app --cov-report=xml --cov-report=term

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
      continue-on-error: true

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black

    - name: Check code formatting with Black
      run: |
        black --check app/ tests/ || true
      continue-on-error: true

    - name: Lint with flake8
      run: |
        flake8 app/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics || true
      continue-on-error: true

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Check application starts
      run: |
        cat > .env << EOF
        SQLALCHEMY_DATABASE_URL=sqlite:///./test.db
        SQLALCHEMY_TEST_DATABASE_URL=sqlite:///./test.db
        SECRET_KEY=${{ secrets.SECRET_KEY }}
        ALGORITHM=HS256
        ACCESS_TOKEN_EXPIRE_MINUTES=30
        MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
        MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
        MAIL_FROM=${{ secrets.MAIL_FROM }}
        MAIL_SERVER=smtp.outlook.com
        MAIL_PORT=587
        EOF
        timeout 10s uvicorn app.main:app --host 0.0.0.0 --port 8000 || exit_code=$?
        if [ $exit_code -eq 124 ]; then
          echo "Application started successfully!"
          exit 0
        else
          echo "Application failed to start"
          exit 1
        fi